configurations {
    docker
}

repositories {
    jcenter()
    maven { url "http://repo.spring.io/plugins-release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://alvch.jfrog.io/alvch/libs-snapshots' }
}

dependencies {
    docker(group: 'ch.admin.seco.jobroom', name: 'jobroom', version: '+', ext: 'war')
    docker(group: 'ch.admin.seco.service.job', name: 'jobservice', version: '+')
    docker(group: 'ch.admin.seco.service.reference', name: 'referenceservice', version: '+')
}

task copyArtifacts {
    dependsOn 'copyDockerFiles'
    doLast {
        configurations.docker.setTransitive(false).resolvedConfiguration.resolvedArtifacts
            .each { artifact ->
            copy {
                from artifact.file
                into "${buildDir}/artifacts"
                rename { "${artifact.name}.${artifact.extension}" }
            }
            copy {
                from "${buildDir}/artifacts/jobroom.war"
                into "${buildDir}/docker/dockerfiles/jobroom"
            }
            copy {
                from "${buildDir}/artifacts/jobservice.jar"
                into "${buildDir}/docker/dockerfiles/jobservice"
            }
            copy {
                from "${buildDir}/artifacts/referenceservice.jar"
                into "${buildDir}/docker/dockerfiles/referenceservice"
            }
        }
    }
}

task copyDockerFiles {
    doLast {
        copy {
            from 'src/main/devops'
            into "${buildDir}/docker"
        }
    }
}

task build(type: Exec) {
    dependsOn 'copyArtifacts'
    commandLine 'docker-compose', '-f', "${buildDir}/docker/docker-compose.yml", 'build'
}

task deploy(type: Exec) {
    dependsOn 'build'
    commandLine 'docker-compose', '-f', "${buildDir}/docker/docker-compose.yml", 'up', '-d'
}

task stop(type: Exec) {
    commandLine 'docker-compose', '-f', "${buildDir}/docker/docker-compose.yml", 'stop'
}

task clean(type: Delete) {
    delete buildDir
}

logger.quiet('INFO:  Elasticsearch requires max virtual memory areas vm.max_map_count of at least [262144]')
logger.quiet('INFO:  run  "sudo sysctl -w vm.max_map_count=262144"  to prepare system')
