task copyDockerFiles {
    doLast {
        copy {
            from 'src/main/devops'
            into "${buildDir}/docker"
        }
    }
}

task copyArtifacts {
    dependsOn 'copyDockerFiles'
    doLast {
        exec {
            commandLine 'mvn', '-q', 'dependency:get', '-DrepoUrl=https://alvch.jfrog.io/alvch/libs-snapshots-local/', '-Dartifact=ch.admin.seco.jobroom:jobroom:LATEST:war', '-Dtransitive=false', "-Ddest=${buildDir}/docker/dockerfiles/jobroom/jobroom.war"
        }
        exec {
            commandLine 'mvn', '-q', 'dependency:get', '-DrepoUrl=https://alvch.jfrog.io/alvch/libs-snapshots-local/', '-Dartifact=ch.admin.seco.service.job:jobservice:LATEST:jar', '-Dtransitive=false', "-Ddest=${buildDir}/docker/dockerfiles/jobservice/jobservice.jar"
        }
        exec {
            commandLine 'mvn', '-q', 'dependency:get', '-DrepoUrl=https://alvch.jfrog.io/alvch/libs-snapshots-local/', '-Dartifact=ch.admin.seco.service.reference:referenceservice:LATEST:jar', '-Dtransitive=false', "-Ddest=${buildDir}/docker/dockerfiles/referenceservice/referenceservice.jar"
        }
        exec {
            commandLine 'mvn', '-q', 'dependency:get', '-DrepoUrl=https://alvch.jfrog.io/alvch/libs-snapshots-local/', '-Dartifact=ch.admin.seco.service.candidate:candidateservice:LATEST:jar', '-Dtransitive=false', "-Ddest=${buildDir}/docker/dockerfiles/candidateservice/candidateservice.jar"
        }
        exec {
            commandLine 'mvn', '-q', 'dependency:get', '-DrepoUrl=https://alvch.jfrog.io/alvch/libs-snapshots-local/', '-Dartifact=ch.admin.seco.jobroom.integration:jobroom_batch:LATEST:jar', '-Dtransitive=false', "-Ddest=${buildDir}/docker/dockerfiles/jobroom_batch/jobroom_batch.jar"
        }
    }
}

task prepareDockerBuild {
    dependsOn 'copyDockerFiles', 'copyArtifacts'
}

task docker_build(type: Exec) {
    dependsOn 'prepareDockerBuild'
    commandLine 'docker-compose', 'build'
    workingDir "${buildDir}/docker/"
}

task docker_push(type: Exec) {
    dependsOn 'docker_build'
    commandLine 'docker-compose', 'push'
    workingDir "${buildDir}/docker/"
}

task build {
    dependsOn 'docker_push'
}

task deploy(type: Exec) {
    dependsOn 'build'
    commandLine 'docker', 'stack', 'deploy', '-c', "${buildDir}/docker/docker-compose.yml", 'dev'
}

task stop(type: Exec) {
    commandLine 'docker', 'stack', 'remove', 'dev'
}

task clean(type: Delete) {
    delete buildDir
}
